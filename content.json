{"meta":{"title":"DJ1-1 1vU","subtitle":"","description":"","author":"😈Ray","url":"http://hashZzz.github.io","root":"/"},"pages":[{"title":"guestbook","date":"2022-05-08T11:24:51.000Z","updated":"2022-05-08T11:25:08.117Z","comments":true,"path":"guestbook/index.html","permalink":"http://hashzzz.github.io/guestbook/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-05-08T11:21:28.000Z","updated":"2022-05-08T11:23:34.061Z","comments":false,"path":"tags/index.html","permalink":"http://hashzzz.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vue-router4-addRoute","slug":"vue-router4-addRoute","date":"2022-05-28T05:13:20.000Z","updated":"2022-05-28T12:46:51.901Z","comments":true,"path":"2022/05/28/vue-router4-addRoute/","link":"","permalink":"http://hashzzz.github.io/2022/05/28/vue-router4-addRoute/","excerpt":"","text":"Vue3搭配Vue-Router4 动态添加路由调整 Vue-Router4 删除了addRoutes方法，提供了addRoute方法 1234//添加一条路由记录 如果路由有一个 name，并且已经有一个与之名字相同的路由，它会先删除之前的路由。 addRoute(parentName: string | symbol, route: RouteRecordRaw): () =&gt; void 在 router.beforeEach 中判断权限和信息之后，调用addRoute方法 不同的是需要配置一个条件用来结束循环 搭配 next({…to, replace: true }) 1234567891011121314151617181920212223242526// 添加404匹配let flag = false;router.beforeEach((to,from,next) =&gt; &#123; if(!flag) &#123; //异步代码回调中执行以下操作 router.addRoute(&#123; path: &quot;/:catchAll(.*)*&quot;, name: &#x27;404&#x27;, component: () =&gt; import(&#x27;@/component&#x27;) &#125;) dynamicRoutes.forEach(route =&gt; &#123; router.addRoute(route.parent, route) &#125;) // 动态路由添加完成后修改flag，表明已经添加完成 正常调用next方法 flag = true next(&#123; ...to, replace: true &#125;) &#125; else &#123; next() &#125;&#125;)","categories":[],"tags":[]},{"title":"task-context","slug":"task-context","date":"2022-05-22T14:09:31.000Z","updated":"2022-05-28T05:12:51.905Z","comments":true,"path":"2022/05/22/task-context/","link":"","permalink":"http://hashzzz.github.io/2022/05/22/task-context/","excerpt":"","text":"异步任务中存在宏任务和微任务 执行顺序 同步任务=&gt; 异步任务 同步代码执行遇见宏任务 放入宏任务队列遇见微任务 放入微任务队列当执行栈为空时取出微任务执行微任务执行完后取出宏任务执行每个宏任务之后会检查微任务队列，清空微任务再执行宏任务","categories":[],"tags":[]},{"title":"formComponent","slug":"form-component","date":"2022-05-19T13:48:41.000Z","updated":"2022-05-19T14:29:42.051Z","comments":true,"path":"2022/05/19/form-component/","link":"","permalink":"http://hashzzz.github.io/2022/05/19/form-component/","excerpt":"","text":"两种封装Form的方法对比 1234567891011121314151617181920212223242526272829303132333435363738394041// 常用数据源 组件库用的iview-designprops: &#123; formInits: [ &#123; type: &#x27;Input&#x27;, label: &#x27;我是测试label1&#x27;, formKey: &#x27;name&#x27;, value: &#x27;&#x27;, attrs: &#123; placeholder: &#x27;我是测试placeholder&#x27;, size: &#x27;small&#x27; &#125;, listeners: &#123; &#x27;on-change&#x27;: function(ev)&#123; console.log(_this.$refs.formWrapper.$refs.generateForm) &#125; &#125; &#125;, &#123; type: &#x27;Select&#x27;, label: &#x27;我是测试label2-select&#x27;, formKey: &#x27;year&#x27;, value: &#x27;&#x27;, options: [ &#123; label: 2021, value: 2021 &#125;, &#123; label: 2022, value: 2022 &#125; ], attrs: &#123; placeholder: &#x27;请选择!!&#x27;, &#125; &#125;, ] &#125;&#125; 使用template语法 12345678&lt;Form ref=&quot;generateForm&quot; :model=&#x27;formState&#x27; :rules=&#x27;rules&#x27;&gt; &lt;FormItem :label=&#x27;item.label&#x27; :prop=&quot;item.formKey&quot; v-for=&quot;item in formInits&quot; :key=&#x27;item.formKey&#x27;&gt; &lt;Input v-if=&quot;item.type === &#x27;Input&#x27;&quot; type=&quot;text&quot; v-bind=&#x27;item.attrs&#x27; v-on=&quot;item.listeners&quot;&gt;&lt;/Input&gt; &lt;Select v-else-if=&quot;item.type === &#x27;Select&#x27;&quot; v-bind=&#x27;item.attrs&#x27; v-on=&quot;item.listeners&quot;&gt; &lt;Option v-for=&#x27;opt in item.options&#x27; :key=&#x27;opt.value&#x27; :value=&#x27;opt.value&#x27;&gt;&lt;/Option&gt; &lt;/Select&gt; &lt;/FormItem&gt;&lt;/Form&gt; 使用render语法 123456789101112131415161718192021222324252627282930313233343536373839// 这里更加推荐安装JSX-loader 就没有这么痛苦render(createElement)&#123; const returnFormSlot = (&#123; type, options &#125;) =&gt; &#123; switch(type) &#123; case &#x27;Input&#x27;: break; case &#x27;Select&#x27;: return options &amp;&amp; options.map(option =&gt; &#123; return createElement(&#x27;Option&#x27;, &#123; props: &#123; key: option.value, value: option.value, &#125;, &#125;, option.label) &#125;) break; &#125; &#125; return createElement(&#x27;Form&#x27;, &#123; ref: &#x27;generateForm&#x27;, props: &#123; model: this.formState, rules: this.rules &#125; &#125;, this.formInits.map(item =&gt; &#123; return createElement(&#x27;FormItem&#x27;, &#123; props: &#123; label: item.label, prop: item.formKey, &#125; &#125;,[createElement(item.type, &#123; props: item.attrs, on: item.listeners &#125;, returnFormSlot(item) )]) &#125;) )&#125;","categories":[],"tags":[]},{"title":"canvas-water-print","slug":"canvas-water-print","date":"2022-05-10T13:37:10.000Z","updated":"2022-05-10T13:54:16.491Z","comments":true,"path":"2022/05/10/canvas-water-print/","link":"","permalink":"http://hashzzz.github.io/2022/05/10/canvas-water-print/","excerpt":"","text":"Canvas生产base64的水印 123456789101112131415161718192021function setWaterPrint(str, elem, fs, color)&#123; var canvas = document.createElement(&#x27;canvas&#x27;); if(elem &amp;&amp; elem.nodeType) &#123; elem.appendChild(canvas); &#125; else &#123; return console.error(&quot;Invalid Target&quot;) &#125; canvas.width = 250; canvas.height = 200; canvas.style.display = &#x27;none&#x27;; var ctx = canvas.getContext(&#x27;2d&#x27;); ctx.rotate( (Math.PI * - 10) / 180 ); ctx.font = fs || &#x27;16px Microsoft YaHei&#x27;; ctx.fillStyle = color || &#x27;rgba(200,200,200, 0.3)&#x27;; ctx.textAlign = &#x27;center&#x27; ctx.textBaseline = &#x27;Middle&#x27;; ctx.fillText(str, canvas.width / 10, canvas.height / 2); elem.style.backgroundImage = &quot;url(&quot; + can.toDataURL(&quot;image/png&quot;) + &quot;)&quot;&#125;// 绑定到Dom上","categories":[],"tags":[{"name":"Canvas","slug":"Canvas","permalink":"http://hashzzz.github.io/tags/Canvas/"}]},{"title":"Hello-world","slug":"Hello-world-0","date":"2022-05-08T07:27:43.000Z","updated":"2022-05-08T12:53:36.842Z","comments":true,"path":"2022/05/08/Hello-world-0/","link":"","permalink":"http://hashzzz.github.io/2022/05/08/Hello-world-0/","excerpt":"","text":"Hello, world ! 这是我的第一篇blog 1code snippet 1window.close() Array.map1array.map(callback[, thisArg]) Something text","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Canvas","slug":"Canvas","permalink":"http://hashzzz.github.io/tags/Canvas/"}]}