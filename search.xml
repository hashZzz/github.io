<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello-world</title>
    <url>/2022/05/08/Hello-world-0/</url>
    <content><![CDATA[<p>Hello,  world !</p>
<p>这是我的第一篇blog</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code snippet  </span><br></pre></td></tr></table></figure>


<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">close</span>()</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><figcaption><span>Array.map</span></figcaption><table><tr><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>

<blockquote class="blockquote-center">
            <p>Something</p>

          </blockquote>

<a class="btn" href="https://www.baidu.com" title="[title]">
            <i class="fa fa-icon [class]"></i>text
          </a>

<!-- <iframe src="https://www.baidu.com/" width="[width]" height="[height]" frameborder="0" loading="lazy" allowfullscreen></iframe> -->


<p><img data-src="/images/header.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>canvas-water-print</title>
    <url>/2022/05/10/canvas-water-print/</url>
    <content><![CDATA[<p><big><strong>Canvas生产base64的水印</strong></big></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">setWaterPrint</span>(<span class="params">str, elem, fs, color</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(elem &amp;&amp; elem.<span class="property">nodeType</span>) &#123;</span><br><span class="line">        elem.<span class="title function_">appendChild</span>(canvas);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Invalid Target&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    canvas.<span class="property">width</span> = <span class="number">250</span>;</span><br><span class="line">    canvas.<span class="property">height</span> = <span class="number">200</span>;</span><br><span class="line">    canvas.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">    ctx.<span class="title function_">rotate</span>( (<span class="title class_">Math</span>.<span class="property">PI</span> * - <span class="number">10</span>) / <span class="number">180</span> );</span><br><span class="line">    ctx.<span class="property">font</span> = fs || <span class="string">&#x27;16px Microsoft YaHei&#x27;</span>;</span><br><span class="line">    ctx.<span class="property">fillStyle</span> = color || <span class="string">&#x27;rgba(200,200,200, 0.3)&#x27;</span>;</span><br><span class="line">    ctx.<span class="property">textAlign</span> = <span class="string">&#x27;center&#x27;</span></span><br><span class="line">    ctx.<span class="property">textBaseline</span> = <span class="string">&#x27;Middle&#x27;</span>;</span><br><span class="line">    ctx.<span class="title function_">fillText</span>(str, canvas.<span class="property">width</span> / <span class="number">10</span>, canvas.<span class="property">height</span> / <span class="number">2</span>);</span><br><span class="line">    elem.<span class="property">style</span>.<span class="property">backgroundImage</span> = <span class="string">&quot;url(&quot;</span> + can.<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>) + <span class="string">&quot;)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定到Dom上</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>formComponent</title>
    <url>/2022/05/19/form-component/</url>
    <content><![CDATA[<p><big><strong>两种封装Form的方法对比</strong></big></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 常用数据源   组件库用的iview-design</span></span><br><span class="line"></span><br><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">formInits</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;Input&#x27;</span>,</span><br><span class="line">                <span class="attr">label</span>: <span class="string">&#x27;我是测试label1&#x27;</span>,</span><br><span class="line">                <span class="attr">formKey</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="attr">attrs</span>: &#123;</span><br><span class="line">                    <span class="attr">placeholder</span>: <span class="string">&#x27;我是测试placeholder&#x27;</span>,</span><br><span class="line">                    <span class="attr">size</span>: <span class="string">&#x27;small&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">listeners</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;on-change&#x27;</span>: <span class="keyword">function</span>(<span class="params">ev</span>)&#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(_this.<span class="property">$refs</span>.<span class="property">formWrapper</span>.<span class="property">$refs</span>.<span class="property">generateForm</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;Select&#x27;</span>,</span><br><span class="line">                <span class="attr">label</span>: <span class="string">&#x27;我是测试label2-select&#x27;</span>,</span><br><span class="line">                <span class="attr">formKey</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">                <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="attr">options</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="number">2021</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">2021</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="number">2022</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">2022</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">attrs</span>: &#123;</span><br><span class="line">                    <span class="attr">placeholder</span>: <span class="string">&#x27;请选择!!&#x27;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>使用template语法</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="title class_">Form</span> ref=<span class="string">&quot;generateForm&quot;</span> :model=<span class="string">&#x27;formState&#x27;</span> :rules=<span class="string">&#x27;rules&#x27;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">FormItem</span> <span class="attr">:label</span>=<span class="string">&#x27;item.label&#x27;</span> <span class="attr">:prop</span>=<span class="string">&quot;item.formKey&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in formInits&quot;</span> <span class="attr">:key</span>=<span class="string">&#x27;item.formKey&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Input</span> <span class="attr">v-if</span>=<span class="string">&quot;item.type === &#x27;Input&#x27;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind</span>=<span class="string">&#x27;item.attrs&#x27;</span> <span class="attr">v-on</span>=<span class="string">&quot;item.listeners&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Select</span> <span class="attr">v-else-if</span>=<span class="string">&quot;item.type === &#x27;Select&#x27;&quot;</span> <span class="attr">v-bind</span>=<span class="string">&#x27;item.attrs&#x27;</span> <span class="attr">v-on</span>=<span class="string">&quot;item.listeners&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Option</span> <span class="attr">v-for</span>=<span class="string">&#x27;opt in item.options&#x27;</span> <span class="attr">:key</span>=<span class="string">&#x27;opt.value&#x27;</span> <span class="attr">:value</span>=<span class="string">&#x27;opt.value&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">FormItem</span>&gt;</span></span></span><br><span class="line">&lt;/<span class="title class_">Form</span>&gt;</span><br></pre></td></tr></table></figure>

<p><strong>使用render语法</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这里更加推荐安装JSX-loader 就没有这么痛苦</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>(<span class="params">createElement</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">returnFormSlot</span> = (<span class="params">&#123; type, options &#125;</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">switch</span>(type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Input&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;Select&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> options &amp;&amp; options.<span class="title function_">map</span>(<span class="function"><span class="params">option</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">createElement</span>(<span class="string">&#x27;Option&#x27;</span>, &#123;</span><br><span class="line">                        <span class="attr">props</span>: &#123;</span><br><span class="line">                            <span class="attr">key</span>: option.<span class="property">value</span>,</span><br><span class="line">                            <span class="attr">value</span>: option.<span class="property">value</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;, option.<span class="property">label</span>)</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElement</span>(<span class="string">&#x27;Form&#x27;</span>, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">ref</span>: <span class="string">&#x27;generateForm&#x27;</span>,</span><br><span class="line">        <span class="attr">props</span>: &#123;</span><br><span class="line">            <span class="attr">model</span>: <span class="variable language_">this</span>.<span class="property">formState</span>,</span><br><span class="line">            <span class="attr">rules</span>: <span class="variable language_">this</span>.<span class="property">rules</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">formInits</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">createElement</span>(<span class="string">&#x27;FormItem&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">props</span>: &#123;</span><br><span class="line">                <span class="attr">label</span>: item.<span class="property">label</span>,</span><br><span class="line">                <span class="attr">prop</span>: item.<span class="property">formKey</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,[<span class="title function_">createElement</span>(item.<span class="property">type</span>, &#123; <span class="attr">props</span>: item.<span class="property">attrs</span>, <span class="attr">on</span>: item.<span class="property">listeners</span> &#125;, </span><br><span class="line">            <span class="title function_">returnFormSlot</span>(item)</span><br><span class="line">        )])</span><br><span class="line">    &#125;)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>prototype</title>
    <url>/2022/05/28/prototype/</url>
    <content><![CDATA[<h2 id="Prototype-原型和原型链"><a href="#Prototype-原型和原型链" class="headerlink" title="Prototype 原型和原型链"></a>Prototype 原型和原型链</h2><p>原型和原型链我理解要从New关键字说起<br>我们通过New关键字创造实例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 创造了一个newObject 我们打印这个对象看看</span></span><br><span class="line"><span class="keyword">const</span> newObj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img data-src="/images/prototype.png"></p>
<p>New首先创建了一个对象<br>执行构造函数里面的代码并给对象设置了prototype<br>绑定了this到对象上，设置constructor指向构造函数<br>最后把新对象返回出来</p>
<p>我们来简单模拟一下new</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">function myNew(target) &#123;</span><br><span class="line">    const newTarget = Object.create(targetFn.prototype);</span><br><span class="line">    // 获取参数</span><br><span class="line">    const args = Array.from(arguments).slice(1);</span><br><span class="line">    // 绑定this</span><br><span class="line">    const value = targetFn.apply(newTarget, args);</span><br><span class="line">    // 判断返回值是不是对象</span><br><span class="line">    const targetType = Object.prototype.toString.call(value).slice(8, -1)</span><br><span class="line">    if([&#x27;Function&#x27;, &#x27;Object&#x27;].includes(targetType)) &#123;</span><br><span class="line">        return value;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return newTarget</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>构造函数通过prototype指向原型对象<br>构造函数创造的实例通过__protot__访问原型对象<br>prototype原型对象通过constructor指向构造函数<br>构造函数通过__proto__访问Object.prototype上的方法<br>Object的prototype隐式指向null<br>而JS中的继承就是以实例的prototype作为父类向下传递的<br>这种链式关系我理解就是原型链</p>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>task-context</title>
    <url>/2022/05/22/task-context/</url>
    <content><![CDATA[<p>异步任务中存在宏任务和微任务</p>
<p>执行顺序</p>
<p>同步任务=&gt; 异步任务</p>
<p>同步代码执行<br>遇见宏任务 放入宏任务队列<br>遇见微任务 放入微任务队列<br>当执行栈为空时<br>取出微任务执行<br>微任务执行完后<br>取出宏任务执行<br>每个宏任务之后会检查微任务队列，清空微任务再执行宏任务</p>
]]></content>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-router4-addRoute</title>
    <url>/2022/05/28/vue-router4-addRoute/</url>
    <content><![CDATA[<h2 id="Vue3搭配Vue-Router4-动态添加路由调整"><a href="#Vue3搭配Vue-Router4-动态添加路由调整" class="headerlink" title="Vue3搭配Vue-Router4 动态添加路由调整"></a>Vue3搭配Vue-Router4 动态添加路由调整</h2><hr>
<p>Vue-Router4 删除了addRoutes方法，提供了addRoute方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加一条路由记录 如果路由有一个 name，并且已经有一个与之名字相同的路由，它会先删除之前的路由。 </span></span><br><span class="line"><span class="title function_">addRoute</span>(<span class="attr">parentName</span>: string | symbol, <span class="attr">route</span>: <span class="title class_">RouteRecordRaw</span>): <span class="function">() =&gt;</span> <span class="keyword">void</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>在 router.beforeEach 中判断权限和信息之后，调用addRoute方法</p>
<p>不同的是需要配置一个条件用来结束循环 搭配以下next写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line"></span><br><span class="line">next(&#123;...to, replace: true &#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 添加404匹配</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">        <span class="comment">//异步代码回调中执行以下操作</span></span><br><span class="line">        router.<span class="title function_">addRoute</span>(&#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&quot;/:catchAll(.*)*&quot;</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;404&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/component&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        dynamicRoutes.<span class="title function_">forEach</span>(<span class="function"><span class="params">route</span> =&gt;</span> &#123;</span><br><span class="line">            router.<span class="title function_">addRoute</span>(route.<span class="property">parent</span>, route)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 动态路由添加完成后修改flag，表明已经添加完成 正常调用next方法</span></span><br><span class="line">        flag = <span class="literal">true</span></span><br><span class="line">        <span class="title function_">next</span>(&#123; ...to, <span class="attr">replace</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Vue3</tag>
      </tags>
  </entry>
</search>
